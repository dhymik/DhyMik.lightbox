{"version":3,"file":"main.js","sources":["webpack:///webpack/bootstrap","webpack:///ekko-lightbox.js","webpack:///./ekko-lightbox.less","webpack:///./index.html"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Lightbox = (($) => {\r\n\r\n    /* Added in v.5.5.0-dhymik:\r\n     * (search for \"added by DhyMik\")\r\n     * \r\n     * 1. auto max data dimensions to max screen dimensions\r\n     * \r\n     *    This solves issues with svg displayed too small\r\n     *    and images / video frames not filling the screen\r\n     * \r\n     * 2. skip resizing and adding inline size styles when\r\n     *    'lightboxFullSize' css class is added to the lighbox <a> tag\r\n     *    \r\n     *    Use this if\r\n     * \r\n     * Changed in 5.5.1-dhymik (2023-04-02):\r\n     * - Vimeo player url will not break if url contains querystring parameters\r\n     * \r\n     * Changed in 5.5.2-dhymik\r\n     * - added support for webstream.eu videos\r\n     */\r\n\r\n\r\n    const NAME = 'ekkoLightbox'\r\n    const JQUERY_NO_CONFLICT = $.fn[NAME]\r\n\r\n    const Default = {\r\n        debug: 0,   // 0: no debug, 1: on-screen info, 2: on-screen plus pop-ups\r\n        title: '',\r\n        footer: '',\r\n        maxWidth: 9999,\r\n        maxHeight: 9999,\r\n        showArrows: true, //display the left / right arrows or not\r\n        hideArrowsOnVideo: false, //hide the left / right arrows for videos\r\n        wrapping: true, //if true, gallery loops infinitely\r\n        type: null, //force the lightbox into image / youtube mode. if null, or not image|youtube|vimeo; detect it\r\n        alwaysShowClose: false, //always show the close button, even if there is no title\r\n        fade: true, // fade in or not\r\n        verticalAlignCenter: false, // vertically centered modal\r\n        loadingMessage: '<div class=\"ekko-lightbox-loader\"><div><div></div><div></div></div></div>', // http://tobiasahlin.com/spinkit/\r\n        leftArrow: '<span>&#10094;</span>',\r\n        rightArrow: '<span>&#10095;</span>',\r\n        strings: {\r\n            close: 'Close',\r\n            fail: 'Failed to load image:',\r\n            type: 'Could not detect remote target type. Force the type using data-type',\r\n        },\r\n        doc: document, // if in an iframe can specify top.document\r\n        onShow() { },\r\n        onShown() { },\r\n        onHide() { },\r\n        onHidden() { },\r\n        onNavigate() { },\r\n        onContentLoaded() { },\r\n    }\r\n\r\n    class Lightbox {\r\n\r\n        /**\r\n\r\n        Class properties:\r\n\r\n         _$element: null -> the <a> element currently being displayed\r\n         _$modal: The bootstrap modal generated\r\n            _$modalDialog: The .modal-dialog\r\n            _$modalContent: The .modal-content\r\n            _$modalBody: The .modal-body\r\n            _$modalHeader: The .modal-header\r\n            _$modalFooter: The .modal-footer\r\n         _$lightboxContainerOne: Container of the first lightbox element\r\n         _$lightboxContainerTwo: Container of the second lightbox element\r\n         _$lightboxContainerCurrent: the container in use\r\n         _$lightboxContainerUnUsed: the currently unused container\r\n         _$lightboxBody: First element in the container\r\n         _$modalNavLayer: The navigation container, overlaid for images, underlaid for videos\r\n         _$modalArrows: The overlayed arrows container, always overlaid\r\n\r\n         _$galleryItems: Other <a>'s available for this gallery\r\n         _galleryName: Name of the current data('gallery') showing\r\n         _galleryIndex: The current index of the _$galleryItems being shown\r\n\r\n         _config: {} the options for the modal\r\n         _modalId: unique id for the current lightbox\r\n\r\n         */\r\n\r\n        static get Default() {\r\n            return Default\r\n        }\r\n\r\n        constructor($element, config) {\r\n            this._config = $.extend({}, Default, config)\r\n            this._$modalNavLayer = null\r\n            this._$modalArrows = null\r\n            this._$debugInfo = null;\r\n            this._galleryIndex = 0\r\n            this._galleryName = null\r\n            this._titleIsShown = false\r\n            this._footerIsShown = false\r\n            this._wantedWidth = 0\r\n            this._wantedHeight = 0\r\n            this._touchstartX = 0\r\n            this._touchendX = 0\r\n\r\n            this._modalId = `ekkoLightbox-${Math.floor((Math.random() * 1000) + 1)}`;\r\n            this._$element = $element instanceof jQuery ? $element : $($element)\r\n\r\n            this._isBootstrap3 = $.fn.modal.Constructor.VERSION[0] == 3;\r\n\r\n            let h4 = `<h4 class=\"modal-title\">${this._config.title || \"&nbsp;\"}</h4>`;\r\n            let btn = `<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"${this._config.strings.close}\"><span aria-hidden=\"true\">&times;</span></button>`;\r\n\r\n            let fade = this._config.fade ? 'fade in' : '';\r\n            let vertical = this._config.verticalAlignCenter ? 'modal-dialog-centered' : '';\r\n\r\n            let header = `<div class=\"modal-header${this._config.title || this._config.alwaysShowClose ? '' : ' hide'}\">` + (this._isBootstrap3 ? btn + h4 : h4 + btn) + `</div>`;\r\n            let footer = `<div class=\"modal-footer${this._config.footer ? '' : ' hide'}\">${this._config.footer || \"&nbsp;\"}</div>`;\r\n            let body = `<div class=\"modal-body\"><div class=\"ekko-lightbox-container\"><div class=\"ekko-lightbox-item ${fade} show\"></div><div class=\"ekko-lightbox-item fade\"></div></div></div>`;\r\n            let dialog = `<div class=\"modal-dialog ${vertical}\" role=\"document\"><div class=\"modal-content\">${header}${body}${footer}</div></div>`;\r\n            $(this._config.doc.body).append(`<div id=\"${this._modalId}\" class=\"ekko-lightbox modal fade\" tabindex=\"-1\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">${dialog}</div>`)\r\n\r\n            this._$modal = $(`#${this._modalId}`, this._config.doc)\r\n\r\n            if (this._config.debug > 0) this._$modal.append(`<div class=\"modal-debug-info\"></div>`);\r\n            this._$debugInfo = this._$modal.find('.modal-debug-info').first();\r\n\r\n            this._$modalDialog = this._$modal.find('.modal-dialog').first()\r\n            this._$modalContent = this._$modal.find('.modal-content').first()\r\n            this._$modalBody = this._$modal.find('.modal-body').first()\r\n            this._$modalHeader = this._$modal.find('.modal-header').first()\r\n            this._$modalFooter = this._$modal.find('.modal-footer').first()\r\n\r\n            this._$lightboxContainer = this._$modalBody.find('.ekko-lightbox-container').first()\r\n            this._$lightboxBodyOne = this._$lightboxContainer.find('> div:first-child').first()\r\n            this._$lightboxBodyTwo = this._$lightboxContainer.find('> div:last-child').first()\r\n            this._$lightboxContainerCurrent = this._$lightboxBodyOne;\r\n            this._$lightboxContainerUnUsed = this._$lightboxBodyTwo;\r\n\r\n            this._galleryName = this._$element.data('gallery')\r\n            if (this._galleryName) {\r\n                this._$galleryItems = $(document.body).find(`*[data-gallery=\"${this._galleryName}\"]`)\r\n                this._galleryIndex = this._$galleryItems.index(this._$element)\r\n                $(document).on('keydown.ekkoLightbox', this._navigationalBinder.bind(this))\r\n\r\n                // add the directional arrows to the modal\r\n                if (this._config.showArrows && this._$galleryItems.length > 1) {\r\n\r\n                    // add the navigation layer with full surface links\r\n                    this._$lightboxContainer.prepend(`<div class=\"ekko-lightbox-nav-overlay\"><a href=\"#\"></a><a href=\"#\"></a></div>`)\r\n                    this._$modalNavLayer = this._$lightboxContainer.find('div.ekko-lightbox-nav-overlay').first()\r\n\r\n                    // add the link arrows suitable also for video overlay\r\n                    this._$lightboxContainer.append(`<div class=\"ekko-lightbox-nav-arrows\"><a href=\"#\">${this._config.leftArrow}</a><a href=\"#\">${this._config.rightArrow}</a></div>`)\r\n                    this._$modalArrows = this._$lightboxContainer.find('div.ekko-lightbox-nav-arrows').first()\r\n\r\n                    // add the click event handlers to all links\r\n                    this._$lightboxContainer.on('click', 'a:first-child', event => {\r\n                        event.preventDefault()\r\n                        return this.navigateLeft()\r\n                    })\r\n                    this._$lightboxContainer.on('click', 'a:last-child', event => {\r\n                        event.preventDefault()\r\n                        return this.navigateRight()\r\n                    })\r\n\r\n                    // add the hover event handlers to nav surface links, adding hover class to arrow links\r\n                    this._$modalNavLayer.find('a:first-child').hover(\r\n                        () => {\r\n                            this._$modalArrows.find('a:first-child').addClass('hover');\r\n                        },\r\n                        () => {\r\n                            this._$modalArrows.find('a:first-child').removeClass('hover').filter('[class=\"\"]').removeAttr('class');\r\n                        }\r\n                    );\r\n                    this._$modalNavLayer.find('a:last-child').hover(\r\n                        () => {\r\n                            this._$modalArrows.find('a:last-child').addClass('hover');\r\n                        },\r\n                        () => {\r\n                            this._$modalArrows.find('a:last-child').removeClass('hover').filter('[class=\"\"]').removeAttr('class');\r\n                        }\r\n                    );\r\n\r\n                    this.updateNavigation()\r\n                }\r\n            }\r\n\r\n            this._$modal\r\n                .on('show.bs.modal', this._config.onShow.bind(this))\r\n                .on('shown.bs.modal', () => {\r\n                    this._toggleLoading(true)\r\n                    this._handle()\r\n                    return this._config.onShown.call(this)\r\n                })\r\n                .on('hide.bs.modal', this._config.onHide.bind(this))\r\n                .on('hidden.bs.modal', () => {\r\n                    if (this._galleryName) {\r\n                        $(document).off('keydown.ekkoLightbox')\r\n                        $(window).off('resize.ekkoLightbox')\r\n                    }\r\n                    this._$modal.remove()\r\n                    return this._config.onHidden.call(this)\r\n                })\r\n                .modal(this._config)\r\n\r\n            $(window).on('resize.ekkoLightbox', () => {\r\n                this._resize(this._wantedWidth, this._wantedHeight)\r\n            });\r\n\r\n            this._$lightboxContainer\r\n                .on('touchstart', () => {\r\n                    this._touchstartX = event.changedTouches[0].screenX;\r\n\r\n                })\r\n                .on('touchend', () => {\r\n                    this._touchendX = event.changedTouches[0].screenX;\r\n                    this._swipeGesure();\r\n                })\r\n        }\r\n\r\n        element() {\r\n            return this._$element;\r\n        }\r\n\r\n        modal() {\r\n            return this._$modal;\r\n        }\r\n\r\n        navigateTo(index) {\r\n\r\n            if (index < 0 || index > this._$galleryItems.length - 1)\r\n                return this\r\n\r\n            this._galleryIndex = index\r\n\r\n            this.updateNavigation()\r\n\r\n            this._$element = $(this._$galleryItems.get(this._galleryIndex))\r\n            this._handle();\r\n        }\r\n\r\n        navigateLeft() {\r\n\r\n            if (!this._$galleryItems)\r\n                return;\r\n\r\n            if (this._$galleryItems.length === 1)\r\n                return\r\n\r\n            if (this._galleryIndex === 0) {\r\n                if (this._config.wrapping)\r\n                    this._galleryIndex = this._$galleryItems.length - 1\r\n                else\r\n                    return\r\n            }\r\n            else //circular\r\n                this._galleryIndex--\r\n\r\n            this._config.onNavigate.call(this, 'left', this._galleryIndex)\r\n            return this.navigateTo(this._galleryIndex)\r\n        }\r\n\r\n        navigateRight() {\r\n\r\n            if (!this._$galleryItems)\r\n                return;\r\n\r\n            if (this._$galleryItems.length === 1)\r\n                return\r\n\r\n            if (this._galleryIndex === this._$galleryItems.length - 1) {\r\n                if (this._config.wrapping)\r\n                    this._galleryIndex = 0\r\n                else\r\n                    return\r\n            }\r\n            else //circular\r\n                this._galleryIndex++\r\n\r\n            this._config.onNavigate.call(this, 'right', this._galleryIndex)\r\n            return this.navigateTo(this._galleryIndex)\r\n        }\r\n\r\n        updateNavigation() {\r\n            if (!this._config.wrapping) {\r\n                let $nav = this._$lightboxContainer.find('div.ekko-lightbox-nav-overlay')\r\n                if (this._galleryIndex === 0)\r\n                    $nav.find('a:first-child').addClass('disabled')\r\n                else\r\n                    $nav.find('a:first-child').removeClass('disabled')\r\n\r\n                if (this._galleryIndex === this._$galleryItems.length - 1)\r\n                    $nav.find('a:last-child').addClass('disabled')\r\n                else\r\n                    $nav.find('a:last-child').removeClass('disabled')\r\n            }\r\n        }\r\n\r\n        close() {\r\n            return this._$modal.modal('hide');\r\n        }\r\n\r\n        // helper private methods\r\n        _navigationalBinder(event) {\r\n            event = event || window.event;\r\n            if (event.keyCode === 39)\r\n                return this.navigateRight()\r\n            if (event.keyCode === 37)\r\n                return this.navigateLeft()\r\n        }\r\n\r\n        // type detection private methods\r\n        _detectRemoteType(src, type) {\r\n\r\n            type = type || false;\r\n\r\n            if (!type && this._isImage(src))\r\n                type = 'image';\r\n            if (!type && this._getWebstreamId(src))\r\n                type = 'webstream';\r\n            if (!type && this._getYoutubeId(src))\r\n                type = 'youtube';\r\n            if (!type && this._getVimeoId(src))\r\n                type = 'vimeo';\r\n            if (!type && this._getInstagramId(src))\r\n                type = 'instagram';\r\n            if (type == 'audio' || type == 'video' || (!type && this._isMedia(src)))\r\n                type = 'media';\r\n            if (!type || ['image', 'webstream', 'youtube', 'vimeo', 'instagram', 'media', 'url'].indexOf(type) < 0)\r\n                type = 'url';\r\n\r\n            return type;\r\n        }\r\n\r\n        _getRemoteContentType(src) {\r\n            let response = $.ajax({\r\n                type: 'HEAD',\r\n                url: src,\r\n                async: false\r\n            });\r\n            let contentType = response.getResponseHeader('Content-Type')\r\n            return contentType;\r\n        }\r\n\r\n        _isImage(string) {\r\n            return string && string.match(/(^data:image\\/.*,)|(\\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\\?|#).*)?$)/i)\r\n        }\r\n\r\n        _isMedia(string) {\r\n            return string && string.match(/(\\.(mp3|mp4|ogg|webm|wav)((\\?|#).*)?$)/i)\r\n        }\r\n\r\n        _switchContainers() {\r\n\r\n            let $newCurrent = this._$lightboxContainerUnUsed\r\n            this._$lightboxContainerUnUsed = this._$lightboxContainerCurrent;\r\n            this._$lightboxContainerCurrent = $newCurrent;\r\n\r\n            // switch z-index\r\n            this._$lightboxContainerCurrent.css(\"z-index\", this._$lightboxContainerUnUsed.css(\"z-index\") + 1);\r\n            this._$lightboxContainerUnUsed.css(\"z-index\", \"auto\");\r\n            this._$lightboxContainerCurrent.css(\"z-index\", 1);\r\n\r\n            this._$lightboxContainerUnUsed.removeClass('in show');\r\n            this._$lightboxContainerCurrent.addClass('in show');\r\n\r\n            return;\r\n        }\r\n\r\n        _handle() {\r\n\r\n            // ### Added by DhyMik in v.5.5.0-dhymik:\r\n\r\n            // remove css added in '_preloadImage'\r\n            this._$modalDialog.removeClass(\"imageLoading\");\r\n            this._$modalDialog.removeClass(\"imageLoaded\");\r\n            this._$modalDialog.removeClass(\"imageStretched\");\r\n            this._$modalDialog.removeClass(\"isVideo\");\r\n\r\n            // ### End added by DhyMik in v.5.5.0-dhymik:\r\n\r\n            let $toUse = this._$lightboxContainerUnUsed;\r\n\r\n            // fade out header and footer\r\n            this._$modalHeader.css(\"opacity\", 0);\r\n            this._$modalFooter.css(\"opacity\", 0);\r\n\r\n            this._updateTitleAndFooter()\r\n            this._switchContainers()\r\n\r\n            let currentRemote = this._$element.attr('data-remote') || this._$element.attr('href')\r\n            let currentType = this._detectRemoteType(currentRemote, this._$element.attr('data-type') || false)\r\n\r\n            if (['image', 'webstream', 'youtube', 'vimeo', 'instagram', 'media', 'url'].indexOf(currentType) < 0)\r\n                return this._error(this._config.strings.type)\r\n\r\n            switch (currentType) {\r\n                case 'image':\r\n                    let altTag = this._$element.attr('data-alt') || '';\r\n                    this._preloadImage(currentRemote, altTag, $toUse)\r\n                    this._preloadImageByIndex(this._galleryIndex, 3)\r\n                    break;\r\n                case 'webstream':\r\n                    this._showWebstreamVideo(this._getWebstreamId(currentRemote), $toUse);\r\n                    break;\r\n                case 'youtube':\r\n                    this._showYoutubeVideo(currentRemote, $toUse);\r\n                    break;\r\n                case 'vimeo':\r\n                    this._showVimeoVideo(this._getVimeoId(currentRemote), $toUse);\r\n                    break;\r\n                case 'instagram':\r\n                    this._showInstagramVideo(this._getInstagramId(currentRemote), $toUse);\r\n                    break;\r\n                case 'media':\r\n                    this._showHtml5Media(currentRemote, $toUse);\r\n                    break;\r\n                default: // url\r\n                    this._loadRemoteContent(currentRemote, $toUse);\r\n                    break;\r\n            }\r\n\r\n            var thisLightbox = this;\r\n\r\n            // fade in header and footer after a delay and delete old content\r\n            setTimeout(function () {\r\n                thisLightbox._$modalHeader.css(\"opacity\", 1);\r\n                thisLightbox._$modalFooter.css(\"opacity\", 1);\r\n                thisLightbox._$lightboxContainerUnUsed.empty();\r\n            }, 250);\r\n\r\n            return this;\r\n        }\r\n\r\n        _getWebstreamId(string) {\r\n            /* id is the entire url fetched from data-remote or href attribute */\r\n            return string && string.indexOf('webstream.eu') > 0 ? string : false\r\n        }\r\n\r\n        _getYoutubeId(string) {\r\n            /* Youtube id here is just the 11 character video id of the url */\r\n            if (!string)\r\n                return false;\r\n            let matches = string.match(/^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/)\r\n            return (matches && matches[2].length === 11) ? matches[2] : false\r\n        }\r\n\r\n        _getVimeoId(string) {\r\n            /* id is the entire url fetched from data-remote or href attribute */\r\n            return string && string.indexOf('vimeo') > 0 ? string : false\r\n        }\r\n\r\n        _getInstagramId(string) {\r\n            /* id is the entire url fetched from data-remote or href attribute */\r\n            return string && string.indexOf('instagram') > 0 ? string : false\r\n        }\r\n\r\n        // layout private methods\r\n        _toggleLoading(show) {\r\n            show = show || false\r\n            if (show) {\r\n                this._$modalDialog.css('display', 'none')\r\n                this._$modal.removeClass('in show')\r\n                $('.modal-backdrop').append(this._config.loadingMessage)\r\n            }\r\n            else {\r\n                this._$modalDialog.css('display', this._config.verticalAlignCenter ? 'flex' : 'block')\r\n                this._$modal.addClass('in show')\r\n                $('.modal-backdrop').find('.ekko-lightbox-loader').remove()\r\n            }\r\n            return this;\r\n        }\r\n\r\n        _calculateScaleFactor(width, height) {\r\n            /* 'calculateScaleFactor' is the size factor to be applied to an image's or video#s dimensions\r\n             * so it will fill the entire screen if browser window is maximized or full-screened.\r\n             * \r\n             * Added in v.5.5.0-dhymik\r\n             * */\r\n            var screenWidth = window.screen.width;      // these are the hardware screen dimensions,\r\n            var screenHeight = window.screen.height;    // not the browser window\r\n\r\n            var videoMaxDimension = Math.max(width, height);\r\n            var screenMaxDimension = Math.max(screenWidth, screenHeight);\r\n\r\n            return screenMaxDimension / videoMaxDimension;\r\n        }\r\n\r\n        _updateTitleAndFooter() {\r\n            let title = this._$element.data('title') || \"\"\r\n            let caption = this._$element.data('footer') || \"\"\r\n\r\n            this._titleIsShown = false\r\n            if (title || this._config.alwaysShowClose) {\r\n                this._titleIsShown = true\r\n                this._$modalHeader.css('display', '').find('.modal-title').html(title || \"&nbsp;\")\r\n                this._$modalDialog.addClass(\"headerIsShown\");\r\n            }\r\n            else {\r\n                this._$modalHeader.css('display', 'none')\r\n                this._$modalDialog.removeClass(\"headerIsShown\");\r\n            }\r\n\r\n            this._footerIsShown = false\r\n            if (caption) {\r\n                this._footerIsShown = true\r\n                this._$modalFooter.css('display', '').html(caption)\r\n                this._$modalDialog.addClass(\"footerIsShown\");\r\n            }\r\n            else {\r\n                this._$modalFooter.css('display', 'none')\r\n                this._$modalDialog.removeClass(\"footerIsShown\");\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        _showWebstreamVideo(id, $containerForElement) {\r\n            let width = this._$element.data('width') || 500\r\n            let height = this._$element.data('height') || width / (560 / 315)\r\n            return this._showVideoIframe(id + \"/embed\" + (id.includes(\"?\") ? '&' : '?') + 'autoplay=1', width, height, $containerForElement);\r\n        }\r\n\r\n        _showYoutubeVideo(remote, $containerForElement) {\r\n            let id = this._getYoutubeId(remote)\r\n            let query = remote.indexOf('&') > 0 ? remote.substr(remote.indexOf('&')) : ''\r\n            let width = this._$element.data('width') || 560\r\n            let height = this._$element.data('height') || width / (560 / 315)\r\n            return this._showVideoIframe(\r\n                `//www.youtube.com/embed/${id}?badge=0&autoplay=1&html5=1${query}`,\r\n                width,\r\n                height,\r\n                $containerForElement\r\n            );\r\n        }\r\n\r\n        _showVimeoVideo(id, $containerForElement) {\r\n            let width = this._$element.data('width') || 500\r\n            let height = this._$element.data('height') || width / (560 / 315)\r\n            return this._showVideoIframe(id + (id.includes(\"?\") ? '&' : '?') + 'autoplay=1', width, height, $containerForElement);\r\n        }\r\n\r\n        _showInstagramVideo(id, $containerForElement) {\r\n            // instagram load their content into iframes so this can be put straight into the element\r\n            let width = this._$element.data('width') || 612\r\n            let height = width + 80;\r\n            id = id.substr(-1) !== '/' ? id + '/' : id; // ensure id has trailing slash\r\n            $containerForElement.html(`<iframe width=\"${width}\" height=\"${height}\" src=\"${id}embed/\" frameborder=\"0\" allowfullscreen></iframe>`);\r\n            this._resize(width, height);\r\n            this._config.onContentLoaded.call(this);\r\n            if (this._$modalNavLayer) this._$modalNavLayer.css('display', !this._config.hideArrowsOnVideo ? '' : 'none');\r\n            this._$modalDialog.addClass(\"isVideo\");\r\n            this._toggleLoading(false);\r\n            return this;\r\n        }\r\n\r\n        _showVideoIframe(url, width, height, $containerForElement) { // should be used for videos only. for remote content use loadRemoteContent (data-type=url)\r\n            height = height || width; // default to square\r\n\r\n            // Added in v.5.5.0-dhymik:\r\n            var scalingFactor = this._calculateScaleFactor(width, height);\r\n            width = width * scalingFactor;\r\n            height = height * scalingFactor;\r\n            // added end.\r\n\r\n            $containerForElement.html(`<div class=\"embed-responsive embed-responsive-16by9\"><iframe width=\"${width}\" height=\"${height}\" src=\"${url}\" frameborder=\"0\" allow=\"autoplay; picture-in-picture\" allowfullscreen class=\"embed-responsive-item\"></iframe></div>`);\r\n            this._resize(width, height);\r\n            this._config.onContentLoaded.call(this);\r\n            if (this._$modalNavLayer) this._$modalNavLayer.css('display', !this._config.hideArrowsOnVideo ? '' : 'none');\r\n            this._$modalDialog.addClass(\"isVideo\");\r\n            this._toggleLoading(false);\r\n            return this;\r\n        }\r\n\r\n        _showHtml5Media(url, $containerForElement) { // should be used for videos only. for remote content use loadRemoteContent (data-type=url)\r\n            let contentType = this._getRemoteContentType(url);\r\n            if (!contentType) {\r\n                return this._error(this._config.strings.type)\r\n            }\r\n            let mediaType = '';\r\n            if (contentType.indexOf('audio') > 0) {\r\n                mediaType = 'audio';\r\n            } else {\r\n                mediaType = 'video';\r\n            }\r\n            let width = this._$element.data('width') || 560\r\n            let height = this._$element.data('height') || width / (560 / 315)\r\n\r\n            // ### Added by DhyMik in v.5.5.0-dhymik:\r\n            var scalingFactor = this._calculateScaleFactor(width, height);\r\n            width = width * scalingFactor;\r\n            height = height * scalingFactor;\r\n            // ### added end.\r\n\r\n            $containerForElement.html(`<div class=\"embed-responsive embed-responsive-16by9\"><${mediaType} width=\"${width}\" height=\"${height}\" preload=\"auto\" autoplay controls class=\"embed-responsive-item\"><source src=\"${url}\" type=\"${contentType}\">${this._config.strings.type}</${mediaType}></div>`);\r\n            this._resize(width, height);\r\n            this._config.onContentLoaded.call(this);\r\n            if (this._$modalNavLayer) this._$modalNavLayer.css('display', !this._config.hideArrowsOnVideo ? '' : 'none');\r\n            this._$modalDialog.addClass(\"isVideo\");\r\n            this._toggleLoading(false);\r\n            return this;\r\n        }\r\n\r\n        _loadRemoteContent(url, $containerForElement) {\r\n            let width = this._$element.data('width') || 560;\r\n            let height = this._$element.data('height') || 560;\r\n\r\n            let disableExternalCheck = this._$element.data('disableExternalCheck') || false;\r\n            this._toggleLoading(false);\r\n\r\n            // ### Added by DhyMik in v.5.5.0-dhymik:\r\n            var scalingFactor = this._calculateScaleFactor(width, height);\r\n            width = width * scalingFactor;\r\n            height = height * scalingFactor;\r\n            // ### added end.\r\n\r\n            // external urls are loading into an iframe\r\n            // local ajax can be loaded into the container itself\r\n            if (!disableExternalCheck && !this._isExternal(url)) {\r\n                $containerForElement.load(url, $.proxy(() => {\r\n                    return this._$element.trigger('loaded.bs.modal');\r\n                }));\r\n\r\n            } else {\r\n                $containerForElement.html(`<iframe src=\"${url}\" frameborder=\"0\" allowfullscreen></iframe>`);\r\n                this._config.onContentLoaded.call(this);\r\n            }\r\n\r\n            if (this._$modalNavLayer) this._$modalNavLayer.css('display', !this._config.hideArrowsOnVideo ? '' : 'none');\r\n            this._$modalDialog.addClass(\"isVideo\");\r\n\r\n            this._resize(width, height);\r\n            return this;\r\n        }\r\n\r\n        _isExternal(url) {\r\n            let match = url.match(/^([^:\\/?#]+:)?(?:\\/\\/([^\\/?#]*))?([^?#]+)?(\\?[^#]*)?(#.*)?/);\r\n            if (typeof match[1] === \"string\" && match[1].length > 0 && match[1].toLowerCase() !== location.protocol)\r\n                return true;\r\n\r\n            if (typeof match[2] === \"string\" && match[2].length > 0 && match[2].replace(new RegExp(`:(${{\r\n                \"http:\": 80,\r\n                \"https:\": 443\r\n            }[location.protocol]})?$`), \"\") !== location.host)\r\n                return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        _error(message) {\r\n            console.error(message);\r\n            this._$lightboxContainerCurrent.html(message);\r\n            this._resize(300, 300);\r\n            return this;\r\n        }\r\n\r\n        _preloadImageByIndex(startIndex, numberOfTimes) {\r\n\r\n            if (!this._$galleryItems)\r\n                return;\r\n\r\n            let next = $(this._$galleryItems.get(startIndex), false)\r\n            if (typeof next == 'undefined')\r\n                return\r\n\r\n            let src = next.attr('data-remote') || next.attr('href')\r\n            if (next.attr('data-type') === 'image' || this._isImage(src))\r\n                this._preloadImage(src, '', false)\r\n\r\n            if (numberOfTimes > 0)\r\n                return this._preloadImageByIndex(startIndex + 1, numberOfTimes - 1);\r\n        }\r\n\r\n        _preloadImage(src, altTag, $containerForImage) {\r\n\r\n            $containerForImage = $containerForImage || false\r\n\r\n            let img = new Image();\r\n            let loadingTimeout = null;\r\n            if ($containerForImage) {\r\n                // if loading takes > 200ms show a loader\r\n                loadingTimeout = setTimeout(() => {\r\n                    $containerForImage.append(this._config.loadingMessage)\r\n                }, 200);\r\n            }\r\n\r\n            img.onload = () => {\r\n                if ($containerForImage) {\r\n\r\n                    if (loadingTimeout)\r\n                        clearTimeout(loadingTimeout)\r\n                    loadingTimeout = null;\r\n\r\n                    let image = $('<img />');\r\n                    image.attr('src', img.src);\r\n                    image.attr('alt', altTag);\r\n                    image.addClass('img-fluid');\r\n\r\n                    // backward compatibility for bootstrap v3\r\n                    image.css('width', '100% !important');\r\n\r\n                    // if the \"data-markup\" attribute is set on the <a> tag...\r\n                    if (this._$element[0].hasAttribute(\"data-markup\")) {\r\n\r\n                        // ...then the \"data-markup\" attribute value provides the repalcement markup\r\n                        var markup = this._$element.attr(\"data-markup\");\r\n                        $containerForImage.html(markup);\r\n                    } else {\r\n                        $containerForImage.html(image);\r\n                    }\r\n\r\n                    if (this._$modalNavLayer) this._$modalNavLayer.css('display', '');\r\n\r\n                    /* ***** determine image dimensions ****\r\n                     * \r\n                     * If image dimensions can be determined \r\n                     * - a max-width inline style is added to .modal-dialog element\r\n                     * - a height inline style is added to .ekko-lightbox-container element\r\n                     * inside of _resize() function.\r\n                     * \r\n                     * In this case, a black backddrop is used behind images to prevent\r\n                     * background bleed during image transitions\r\n                     * \r\n                     * If image dimensions cannot be determined, images are stretched\r\n                     * to maximum dimensions by maximizing all parent containers.\r\n                     * In this case\r\n                     * - 'imageStretched' css class is added to .modal-dialog element\r\n                     * - black backdrop is not being used, to prevent backdrop from\r\n                     *   extending over entire screen regardless of image size.\r\n                     * */\r\n\r\n                    this._$modalDialog.css('display', this._config.verticalAlignCenter ? 'flex' : 'block');\r\n\r\n                    this._$modalDialog.addClass(\"imageLoading\");\r\n                    // temporarily stretches img parent containers so image dimensions can be determined.\r\n\r\n                    var clientWidth = 0;\r\n                    var clientHeight = 0;\r\n\r\n                    // this works in Firefox etc. for jpg AND svg:\r\n                    var imageWidth = $containerForImage.find(\"img\")[0].width;\r\n                    var imageHeight = $containerForImage.find(\"img\")[0].height;\r\n\r\n                    // this works in Chrome etc. for jpg AND svg:\r\n                    var imgWidth = img.width;\r\n                    var imgHeight = img.height;\r\n\r\n                    if (imageWidth > 0 && imageHeight > 0) {\r\n                        clientWidth = imageWidth;\r\n                        clientHeight = imageHeight;\r\n                    }\r\n                    else if (imgWidth > 0 && imgHeight > 0) {\r\n                        clientWidth = imgWidth;\r\n                        clientHeight = imgHeight;\r\n                    }\r\n\r\n                    this._$modalDialog.removeClass(\"imageLoading\");\r\n                    // remove temporary parent container stretch\r\n\r\n                    if (clientWidth > 0 && clientHeight > 0) {\r\n                        // we found image dimensions...\r\n                        if (this._config.debug > 1) alert(\r\n                            \"imageWidth: \" + imageWidth + \", \\\\n\" +\r\n                            \"imageHeight: \" + imageHeight + \", \\\\n\" +\r\n                            \"imgWidth: \" + imgWidth + \", \\\\n\" +\r\n                            \"imgHeight: \" + imgHeight + \".\"\r\n                        );\r\n                        // ...resize the parent containers accordingly:\r\n                        this._resize(clientWidth, clientHeight);\r\n                    }\r\n                    else {\r\n                        // we did not find image dimensions, use stretch method by css:\r\n                        this._$modalDialog.addClass(\"imageStretched\");\r\n                        if (this._config.debug > 1) alert(\"imageStretched\");\r\n                        if (window.console) console.log(\"ekko lightbox: using 'imageStretched' mode for \" + img.src);\r\n                    }\r\n\r\n                    this._$modalDialog.addClass(\"imageLoaded\");\r\n\r\n                    this._toggleLoading(false);\r\n                    return this._config.onContentLoaded.call(this);\r\n                }\r\n            };\r\n\r\n            if ($containerForImage) {\r\n                img.onerror = () => {\r\n                    this._toggleLoading(false);\r\n                    return this._error(this._config.strings.fail + `  ${src}`);\r\n                };\r\n            }\r\n\r\n            img.src = src;\r\n            return img;\r\n        }\r\n\r\n        _swipeGesure() {\r\n            if (this._touchendX < this._touchstartX) {\r\n                return this.navigateRight();\r\n            }\r\n            if (this._touchendX > this._touchstartX) {\r\n                return this.navigateLeft();\r\n            }\r\n        }\r\n\r\n        _resize(width, height) {\r\n\r\n            height = height || width;\r\n\r\n            var scalingFactor = this._calculateScaleFactor(width, height);\r\n            width = width * scalingFactor;\r\n            height = height * scalingFactor;\r\n\r\n            this._wantedWidth = width;\r\n            this._wantedHeight = height;\r\n\r\n            if (this._config.debug > 1) alert(\"wanted width: \" + this._wantedWidth + \", wanted height: \" + this._wantedHeight);\r\n\r\n            let imageAspecRatio = width / height;\r\n\r\n            this._$modalDialog.addClass(\"imageLoading\");\r\n            // temporarily stretches img parent containers so element dimensions can be determined.\r\n\r\n            var modalDialogOuterWidthExcludingMargins = this._$modalDialog.outerWidth(false);\r\n            var modalImageContainerInnerWidth = this._$lightboxContainer.innerWidth();\r\n\r\n            var modalDialogOuterHeightExcludingMargins = this._$modalDialog.outerHeight(false);\r\n            var modalDialogOuterHeightIncludingMargins = this._$modalDialog.outerHeight(true);\r\n            var modalImageContainerInnerHeight = this._$lightboxContainer.innerHeight();\r\n\r\n            this._$modalDialog.removeClass(\"imageLoading\");\r\n\r\n            // the width difference between image container and .modal-dialog element (excluding its margin), which gets the 'max-width' inline style added\r\n            var widthInnerSpacing = modalDialogOuterWidthExcludingMargins - modalImageContainerInnerWidth;\r\n\r\n            // the height difference between .moda-dialog element (excluding its margins) and the image container element, which gets the 'height' inline style added\r\n            var heightInnerSpacing = modalDialogOuterHeightExcludingMargins - modalImageContainerInnerHeight;\r\n            var heightOuterSpacing = modalDialogOuterHeightIncludingMargins - modalImageContainerInnerHeight;\r\n\r\n            let maxWidth = Math.min(modalDialogOuterWidthExcludingMargins, this._config.doc.body.clientWidth, this._config.maxWidth)\r\n\r\n            // if width > the available space, scale down the expected width and height\r\n\r\n            if ((width + widthInnerSpacing) > maxWidth) {\r\n                height = (maxWidth - widthInnerSpacing) / imageAspecRatio;\r\n                width = maxWidth\r\n            } else\r\n                width = (width + widthInnerSpacing)\r\n\r\n            let headerHeight = 0,\r\n                footerHeight = 0\r\n\r\n            // as the resize is performed the modal is show, the calculate might fail\r\n            // if so, default to the default sizes\r\n            if (this._footerIsShown)\r\n                footerHeight = this._$modalFooter.outerHeight(true) || 55\r\n\r\n            if (this._titleIsShown)\r\n                headerHeight = this._$modalHeader.outerHeight(true) || 67\r\n\r\n            let maxHeight = Math.min(height, window.innerHeight - heightOuterSpacing - headerHeight - footerHeight, this._config.maxHeight - heightInnerSpacing - headerHeight - footerHeight);\r\n\r\n            if (height > maxHeight) {\r\n                // if height > the available height, scale down the width\r\n                width = Math.ceil(maxHeight * imageAspecRatio) + widthInnerSpacing;\r\n            }\r\n\r\n            this._$lightboxContainer.css('height', maxHeight)\r\n            this._$modalDialog.css('flex', '1').css('maxWidth', width);\r\n\r\n            if (this._config.debug > 0 && this._$debugInfo) {\r\n                var message = \"window width: \" + $(window).width()\r\n                    + \",\\nwindow height: \" + $(window).height()\r\n                    + \",\\nwindow screen width: \" + window.screen.width\r\n                    + \",\\nwindow screen height: \" + window.screen.height\r\n                    + \",\\nwindow inner width: \" + window.innerWidth\r\n                    + \",\\nwindow inner height: \" + window.innerHeight\r\n                    + \",\\n maxheight: \" + maxHeight;\r\n\r\n                this._$debugInfo.text(message);\r\n            }\r\n\r\n            let modal = this._$modal.data('bs.modal');\r\n            if (modal) {\r\n                // v4 method is mistakenly protected\r\n                try {\r\n                    modal._handleUpdate();\r\n                } catch (Exception) {\r\n                    modal.handleUpdate();\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n\r\n        static _jQueryInterface(config) {\r\n            config = config || {}\r\n            return this.each(() => {\r\n                let $this = $(this)\r\n                let _config = $.extend(\r\n                    {},\r\n                    Lightbox.Default,\r\n                    $this.data(),\r\n                    typeof config === 'object' && config\r\n                )\r\n\r\n                new Lightbox(this, _config)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    $.fn[NAME] = Lightbox._jQueryInterface\r\n    $.fn[NAME].Constructor = Lightbox\r\n    $.fn[NAME].noConflict = () => {\r\n        $.fn[NAME] = JQUERY_NO_CONFLICT\r\n        return Lightbox._jQueryInterface\r\n    }\r\n\r\n    return Lightbox\r\n\r\n})(jQuery)\r\n\r\nexport default Lightbox\r\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1680536589755\n      var cssReload = require(\"!./node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n    <head>\\r\\n        <title>Bootstrap Lightbox</title>\\r\\n\\r\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n\\r\\n        <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\\\" integrity=\\\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\\\" crossorigin=\\\"anonymous\\\">\\r\\n        <link href=\\\"main.css\\\" rel=\\\"stylesheet\\\">\\r\\n\\r\\n        <!-- for documentation only -->\\r\\n        <style type=\\\"text/css\\\">\\r\\n            div.row > div > div.row {\\r\\n                margin-bottom: 15px;\\r\\n            }\\r\\n\\r\\n            html {\\r\\n                background-color: #02709e;\\r\\n            }\\r\\n            body {\\r\\n                background: #fefefe;\\r\\n                padding-bottom: 50px;\\r\\n            }\\r\\n\\r\\n            div.top-container {\\r\\n                padding-top:100px;\\r\\n                background-color: #02709e;\\r\\n                color:#ccc;\\r\\n            }\\r\\n            div.top-container h1 {\\r\\n                color:white;\\r\\n            }\\r\\n            div.top-container a {\\r\\n                color:#ccc;\\r\\n                border-bottom:1px dotted white;\\r\\n            }\\r\\n            div.top-container a:hover {\\r\\n                color: white;\\r\\n                cursor:pointer;\\r\\n                border-bottom:1px solid white;\\r\\n                text-decoration: none;\\r\\n            }\\r\\n            div.top-header {\\r\\n                margin-bottom:100px;\\r\\n            }\\r\\n\\r\\n            h2 {\\r\\n                background-color:#02709e;\\r\\n                color:white;\\r\\n                display:inline-block;\\r\\n                padding:6px;\\r\\n                margin-top:100px;\\r\\n            }\\r\\n\\r\\n            h3 {\\r\\n                padding-bottom:5px;\\r\\n                margin-bottom:10px;\\r\\n                border-bottom:1px solid #f2f2f2;\\r\\n                margin-top: 50px;\\r\\n            }\\r\\n\\r\\n            h4:not(.modal-title) {\\r\\n                margin-top:25px;\\r\\n            }\\r\\n\\r\\n            figure {\\r\\n                position: relative;\\r\\n            }\\r\\n\\r\\n            figure figcaption {\\r\\n                font-size: 22px;\\r\\n                color: #fff;\\r\\n                text-decoration: none;\\r\\n                bottom: 10px;\\r\\n                right: 20px;\\r\\n                position: absolute;\\r\\n                background-color: #000;\\r\\n            }\\r\\n\\t\\t\\tcode[data-code], code.block-code {\\r\\n                display:block;\\r\\n                overflow:scroll;\\r\\n                font-size:12px;\\r\\n\\t\\t\\t\\twhite-space: pre;\\r\\n\\t\\t\\t}\\r\\n\\r\\n            table {\\r\\n                font-size:12px;\\r\\n            }\\r\\n            .footer {\\r\\n                text-align: center;\\r\\n            }\\r\\n            .footer span {\\r\\n                margin-top:100px;\\r\\n                font-size:12px;\\r\\n                background-color:#02709e;\\r\\n                color:white;\\r\\n                display:inline-block;\\r\\n                padding:6px;\\r\\n            }\\r\\n            .footer span a {\\r\\n                color:#ccc;\\r\\n                border-bottom:1px dotted white;\\r\\n            }\\r\\n            .footer span a:hover {\\r\\n                cursor:pointer;\\r\\n                color: white;\\r\\n                border-bottom:1px solid white;\\r\\n                text-decoration: none;\\r\\n            }\\r\\n            a.anchorjs-link {\\r\\n                color:black;\\r\\n            }\\r\\n            a.anchorjs-link:hover {\\r\\n                color:#02709e;\\r\\n                text-decoration: none;\\r\\n            }\\r\\n        </style>\\r\\n    </head>\\r\\n    <body>\\r\\n\\r\\n        <div class=\\\"top-container\\\">\\r\\n\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row justify-content-center\\\">\\r\\n                    <div class=\\\"col-md-10\\\">\\r\\n\\r\\n                        <div class=\\\"top-header\\\">\\r\\n                            <h1>Lightbox for Bootstrap</h1>\\r\\n                            <p class=\\\"lead\\\">Utilizes Bootstraps modal plugin to implement a lightbox gallery - <a href=\\\"https://github.com/ashleydw/lightbox\\\">GitHub</a></p>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <iframe src=\\\"http://ghbtns.com/github-btn.html?user=ashleydw&repo=lightbox&type=watch&count=true\\\" allowtransparency=\\\"true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"100\\t\\\" height=\\\"20\\\"></iframe>\\r\\n                                <iframe src=\\\"http://ghbtns.com/github-btn.html?user=ashleydw&repo=lightbox&type=fork&count=true\\\" allowtransparency=\\\"true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"100\\\" height=\\\"20\\\"></iframe>\\r\\n                                <iframe src=\\\"http://ghbtns.com/github-btn.html?user=ashleydw&repo=lightbox&type=follow&count=true\\\" allowtransparency=\\\"true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"160\\\" height=\\\"20\\\"></iframe>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row justify-content-center\\\">\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n\\r\\n                    <h2>Install</h2>\\r\\n                    <p>Grab the latest CSS / JS files from the CDN: <a href=\\\"https://cdnjs.com/libraries/ekko-lightbox\\\">https://cdnjs.com/libraries/ekko-lightbox</a>.</p>\\r\\n                    <p>Or, with bower: <code>bower install ekko-lightbox --save</code></p>\\r\\n                    <p>Or, download the files directly: <a href=\\\"https://github.com/ashleydw/lightbox/tree/master/dist\\\">https://github.com/ashleydw/lightbox/tree/master/dist</a></p>\\r\\n                    <br /><br />\\r\\n                    <p>Place this near on your page, probably near the end of the body section:</p>\\r\\n<code class=\\\"block-code\\\">$(document).on('click', '[data-toggle=\\\"lightbox\\\"]', function(event) {\\r\\n    event.preventDefault();\\r\\n    $(this).ekkoLightbox();\\r\\n});</code>\\r\\n                    <br /><br />\\r\\n                    <p>Then simply add <code>data-toggle</code> to your anchor tags.</p>\\r\\n<code class=\\\"block-code\\\">&lt;a href=&quot;https://unsplash.it/1200/768.jpg?image=251&quot; data-toggle=&quot;lightbox&quot;&gt;\\r\\n    &lt;img src=&quot;https://unsplash.it/600.jpg?image=251&quot; class=&quot;img-fluid&quot;&gt;\\r\\n&lt;/a&gt;\\r\\n</code>\\r\\n                    <br /><br />\\r\\n                    <p>Obviously, you need Bootstrap. Made for Bootstrap v4 but *should* work with v3.</p>\\r\\n\\r\\n                    <h2>Options</h2>\\r\\n                    <p>Options are passed down to the modal object so you can also use any of the <a href=\\\"http://getbootstrap.com/javascript/#modals-usage\\\">original modal options</a>.</p>\\r\\n                    <p>Pass the options to the calling function as an object, or set defaults using <code>$.fn.ekkoLightbox.defaults</code> (excluding modal default options, notable: title, footer, remote)</p>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                                <th>type</th>\\r\\n                                <th>default</th>\\r\\n                                <th>description</th>\\r\\n                                <th>data-*</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>leftArrow / rightArrow</td>\\r\\n                                    <td>html</td>\\r\\n                                    <td><code>&#10094;</code> / <code>&#10095;</code></td>\\r\\n                                    <td>HTML for the arrows</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>wrapping</td>\\r\\n                                    <td>boolean</td>\\r\\n                                    <td><code>true</code></td>\\r\\n                                    <td>Whether the gallery should loop or not</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>width / height</td>\\r\\n                                    <td>integer</td>\\r\\n                                    <td></td>\\r\\n                                    <td>Force the width / height</td>\\r\\n                                    <td><code>data-(width|height)=\\\"[0-9]+\\\"</code></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>maxWidth / maxHeight</td>\\r\\n                                    <td>integer</td>\\r\\n                                    <td>9999</td>\\r\\n                                    <td>Limit the container width / height</td>\\r\\n                                    <td><code>data-(max-width|max-height)=\\\"[0-9]+\\\"</code></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>alwaysShowClose</td>\\r\\n                                    <td>boolean</td>\\r\\n                                    <td><code>false</code></td>\\r\\n                                    <td>Always show the close button, even if no title is present</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>loadingMessage</td>\\r\\n                                    <td>html</td>\\r\\n                                    <td>A fancy loader</td>\\r\\n                                    <td>HTML injected for loading</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>showArrows</td>\\r\\n                                    <td>bool</td>\\r\\n                                    <td>true</td>\\r\\n                                    <td>Disable the navigation overlay</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>fade</td>\\r\\n                                    <td>bool</td>\\r\\n                                    <td>true</td>\\r\\n                                    <td>Fade in the modal</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>verticalAlignCenter</td>\\r\\n                                    <td>bool</td>\\r\\n                                    <td>false</td>\\r\\n                                    <td>Center the modal vertically</td>\\r\\n                                    <td></td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <code class=\\\"block-code\\\">$(this).ekkoLightbox({\\r\\n    alwaysShowClose: true,\\r\\n    onShown: function() {\\r\\n        console.log('Checking our the events huh?');\\r\\n    },\\r\\n    onNavigate: function(direction, itemIndex)\\r\\n        console.log('Navigating '+direction+'. Current item: '+itemIndex);\\r\\n    }\\r\\n    ...\\r\\n});</code>\\r\\n                    <br /><br />\\r\\n                    <p>The following options are specified per element.</p>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                                <th>Description</th>\\r\\n                                <th>Example</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>remote</td>\\r\\n                                <td>If you can't/don't want to set the href property of an element</td>\\r\\n                                <td><code>data-remote=\\\"http://www....\\\"</code></td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>gallery</td>\\r\\n                                <td>For grouping elements</td>\\r\\n                                <td><code>data-gallery=\\\"gallery-name\\\"</code></td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>type</td>\\r\\n                                <td>Force the lightbox into image/YouTube mode.</td>\\r\\n                                <td><code>data-type=\\\"(image|youtube|vimeo)\\\"</code></td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>disable-external-check</td>\\r\\n                                <td>Force the lightbox loading into an iframe.</td>\\r\\n                                <td><code>data-disable-external-check=\\\"(true|false)\\\"</code></td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <code class=\\\"block-code\\\">&lt;a href=&quot;https://unsplash.it/1200/768.jpg?image=251&quot; data-toggle=&quot;lightbox&quot; data-gallery=&quot;example-gallery&quot; data-type=&quot;image&quot;&gt;\\r\\n    &lt;img src=&quot;https://unsplash.it/600.jpg?image=251&quot; class=&quot;img-fluid&quot;&gt;\\r\\n&lt;/a&gt;</code>\\r\\n\\r\\n                    <h2>Events</h2>\\r\\n                    <p>Events can be hooked into, set the the same as options above.</p>\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table table-bordered\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                                <th>Description</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>onContentLoaded</td>\\r\\n                                <td>Fired when content (image/video/remote page etc) has been fully loaded.</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>onNavigate</td>\\r\\n                                <td>Fired before navigating a gallery.</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>onShow/onShown/onHide/onHidden</td>\\r\\n                                <td>Inherited from the bootstrap modal.</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n\\r\\n                    <h2>Examples</h2>\\r\\n                    <p>Thanks to <a href=\\\"https://unsplash.it/\\\">https://unsplash.it/</a> for the images.</p>\\r\\n                    <ul>\\r\\n                        <li><a href=\\\"#single-image\\\">Single Image</a></li>\\r\\n                        <li><a href=\\\"#image-gallery\\\">Image Gallery</a></li>\\r\\n                        <li><a href=\\\"#limit-size\\\">Limit Image Size</a></li>\\r\\n                        <li><a href=\\\"#videos\\\">Videos</a></li>\\r\\n                        <li><a href=\\\"#videos-gallery\\\">Gallery of Videos</a></li>\\r\\n                        <li><a href=\\\"#mixed-gallery\\\">Mixed gallery</a></li>\\r\\n                        <li><a href=\\\"#programatically-call\\\">Programmatically call</a></li>\\r\\n                        <li><a href=\\\"#data-remote\\\">Via <code>data-remote</code></a></li>\\r\\n                        <li><a href=\\\"#force-type\\\">Force type</a></li>\\r\\n                        <li><a href=\\\"#hidden-elements\\\">Hidden elements</a></li>\\r\\n                        <li><a href=\\\"#remote-content\\\">Remote content</a></li>\\r\\n                        <li><a href=\\\"#no-wrapping\\\">Disable wrapping</a></li>\\r\\n                        <li><a href=\\\"#disable-fade\\\">Disable fade</a></li>\\r\\n                        <li><a href=\\\"#center-vertically\\\">Center vertically</a></li>\\r\\n                        <li><a href=\\\"#alt-attr\\\">\\\"alt\\\" attribute</a></li>\\r\\n                    </ul>\\r\\n\\r\\n                    <h3 id=\\\"single-image\\\">Single Image</h3>\\r\\n                    <p>Note: uses modal plugin title option via <code>data-title</code>, and the custom footer tag using <code>data-footer</code></p>\\r\\n                    <div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-sm-3\\\" data-code=\\\"example-1\\\">\\r\\n                            <a href=\\\"https://unsplash.it/1200/768.jpg?image=250\\\" data-toggle=\\\"lightbox\\\" data-title=\\\"A random title\\\" data-footer=\\\"A custom footer text\\\">\\r\\n                                <img src=\\\"https://unsplash.it/600.jpg?image=250\\\" class=\\\"img-fluid\\\">\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code=\\\"example-1\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"image-gallery\\\">Image Gallery</h3>\\r\\n                    <p>Galleries are created by adding the <code>data-gallery</code> attribute.</p>\\r\\n                    <div data-code=\\\"example-2\\\">\\r\\n                        <div class=\\\"row justify-content-center\\\">\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=251\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=251\\\" alt=\\\"Image 1\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=252\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=252\\\" alt=\\\"Image 3\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=253\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=253\\\" alt=\\\"Image 3\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=254\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=254\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=255\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=255\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=256\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=256\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code=\\\"example-2\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"limit-size\\\">Limit Image Size</h3>\\r\\n                    <p>Note: uses modal plugin limiting via <code>data-max-width</code> (or <code>data-max-height</code>)</p>\\r\\n                    <div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-sm-3\\\" data-code=\\\"example-10\\\">\\r\\n                            <a href=\\\"https://unsplash.it/1200/768.jpg?image=250\\\" data-toggle=\\\"lightbox\\\" data-max-width=\\\"600\\\">\\r\\n                                <img src=\\\"https://unsplash.it/600.jpg?image=250\\\" class=\\\"img-fluid\\\">\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code=\\\"example-10\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"videos\\\">Videos</h3>\\r\\n                    <h4>YouTube</h4>\\r\\n                    <p>You can use various YouTube URL formats, the regex used is: <code>/^.*(youtu.be\\\\/|v\\\\/|u\\\\/\\\\w\\\\/|embed\\\\/|watch\\\\?v=|\\\\&v=)([^#\\\\&\\\\?]*).*/</code></p>\\r\\n                    <div data-code=\\\"example-3\\\">\\r\\n                        <p><a href=\\\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\\\" data-toggle=\\\"lightbox\\\">Justin Bieber - Love Yourself</a></p>\\r\\n                        <p><a href=\\\"http://youtu.be/b0jqPvpn3sY\\\" data-toggle=\\\"lightbox\\\">Tame Impala - Elephant (using youtu.be link)</a></p>\\r\\n                        <p><a href=\\\"https://www.youtube.com/watch?v=oyEuk8j8imI&rel=0\\\" data-toggle=\\\"lightbox\\\">Justin Bieber - Love Yourself</a> (suppress related videos with <code>&rel=0</code>)</p>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-3\\\" data-trim=\\\"all\\\"></code>\\r\\n                    <h4>Vimeo</h4>\\r\\n                    <p>You cannot embed Vimeo videos using the standard url (ie http://vimeo.com/80629469); you must link to the embed source (ie player.vimeo.com/video/80629469). This will mean your link url - if the JavaScript fails, will open the full screen player (try opening the first link below in a new tab); the solution to this is to set the lightbox source directly - the second link below does this.</p>\\r\\n                    <div data-code=\\\"example-3-b\\\">\\r\\n                        <p><a href=\\\"http://player.vimeo.com/video/80629469\\\" data-toggle=\\\"lightbox\\\">City Lights - from Colin Rich (using embed link)</a></p>\\r\\n                        <p><a href=\\\"http://vimeo.com/80629469\\\" data-remote=\\\"http://player.vimeo.com/video/80629469\\\" data-toggle=\\\"lightbox\\\">City Lights - from Colin Rich</a> (with reccommended <code>data-remote</code> setting)</p>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-3-b\\\" data-trim=\\\"all\\\"></code>\\r\\n                    <h4>Instagram</h4>\\r\\n                    <p></p>\\r\\n                    <div data-code=\\\"example-3-c\\\">\\r\\n                        <p><a href=\\\"http://instagram.com/p/BRCYe_wD9pV/\\\" data-toggle=\\\"lightbox\\\" data-title=\\\"Plug for our new service\\\">Instagram</a></p>\\r\\n                        <p>This also works with photos: <a href=\\\"//instagram.com/p/BRCdyxnjBsA/\\\" data-toggle=\\\"lightbox\\\">Instagram</a></p>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-3-c\\\" data-trim=\\\"all\\\"></code>\\r\\n                    <h4>Forcing width</h4>\\r\\n                    <p>Set the width of the video</p>\\r\\n                    <div data-code=\\\"example-3-d\\\">\\r\\n                        <p><a href=\\\"https://www.youtube.com/watch?v=e-ORhEE9VVg\\\" data-toggle=\\\"lightbox\\\">Taylor Swift - Blank Space (standard)</a></p>\\r\\n                        <p><a href=\\\"https://www.youtube.com/watch?v=e-ORhEE9VVg\\\" data-toggle=\\\"lightbox\\\" data-width=\\\"640\\\">Taylor Swift - Blank Space (640 x 360)</a></p>\\r\\n                        <p><a href=\\\"https://www.youtube.com/watch?v=e-ORhEE9VVg\\\" data-toggle=\\\"lightbox\\\" data-width=\\\"1280\\\">Taylor Swift - Blank Space (1280 x 780)</a></p>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-3-d\\\" data-trim=\\\"all\\\"></code>\\r\\n\\r\\n                    <!-- i hope your coworkers think you're listening to some justin and taylor -->\\r\\n\\r\\n                    <h3 id=\\\"videos-gallery\\\">Gallery of Videos</h3>\\r\\n                    <div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row\\\" data-code=\\\"example-4\\\">\\r\\n                                <a href=\\\"http://www.youtube.com/watch?v=k6mFF3VmVAs\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"youtubevideos\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://i1.ytimg.com/vi/yP11r5n5RNg/mqdefault.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"http://youtu.be/iQ4D273C7Ac\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"youtubevideos\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://i1.ytimg.com/vi/iQ4D273C7Ac/mqdefault.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"//www.youtube.com/embed/b0jqPvpn3sY\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"youtubevideos\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://i1.ytimg.com/vi/b0jqPvpn3sY/mqdefault.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-4\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"mixed-gallery\\\">Mixed gallery</h3>\\r\\n                    <div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row flex-items-xs-center\\\" data-code=\\\"example-5\\\">\\r\\n                                <a href=\\\"http://www.youtube.com/watch?v=k6mFF3VmVAs\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"mixedgallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://i1.ytimg.com/vi/yP11r5n5RNg/mqdefault.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"https://unsplash.it/1200/768.jpg?image=257\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"mixedgallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"https://unsplash.it/600.jpg?image=257\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"http://vimeo.com/80629469\\\" data-remote=\\\"http://player.vimeo.com/video/80629469\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"mixedgallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://b.vimeocdn.com/ts/458/070/458070637_200.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-5\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"programatically-call\\\">Programmatically call</h3>\\r\\n                    <p>These two examples are opened via the JavaScript at the bottom of the source.</p>\\r\\n                    <div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row\\\" data-code=\\\"example-6\\\">\\r\\n                                <a href=\\\"https://unsplash.it/1200/768.jpg?image=258\\\" id=\\\"open-image\\\" class=\\\"col-6\\\">\\r\\n                                    <img src=\\\"https://unsplash.it/600.jpg?image=258\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"http://youtu.be/iQ4D273C7Ac\\\" id=\\\"open-youtube\\\" class=\\\"col-6\\\">\\r\\n                                    <img src=\\\"http://i1.ytimg.com/vi/iQ4D273C7Ac/mqdefault.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-6\\\"></code>\\r\\n                    <code class=\\\"block-code\\\">$(&#39;#open-image&#39;).click(function (e) {\\r\\n    e.preventDefault();\\r\\n    $(this).ekkoLightbox();\\r\\n});\\r\\n$(&#39;#open-youtube&#39;).click(function (e) {\\r\\n    e.preventDefault();\\r\\n    $(this).ekkoLightbox();\\r\\n});</code>\\r\\n\\r\\n                    <h3 id=\\\"data-remote\\\">Via <code>data-remote</code></h3>\\r\\n                    <p>Neither of these are <code>&lt;a /&gt;</code> tags, so both rely on the <code>data-remote</code> attribute.</p>\\r\\n                    <div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row\\\" data-code=\\\"example-7\\\" style=\\\"height:240px\\\">\\r\\n                                <img src=\\\"https://unsplash.it/600.jpg?image=259\\\" data-toggle=\\\"lightbox\\\" data-remote=\\\"https://unsplash.it/1200/768.jpg?image=259\\\" class=\\\"img-fluid col-6\\\">\\r\\n                                <img src=\\\"http://i1.ytimg.com/vi/b0jqPvpn3sY/mqdefault.jpg\\\" data-toggle=\\\"lightbox\\\" data-remote=\\\"https://www.youtube.com/embed/b0jqPvpn3sY\\\" class=\\\"img-fluid col-6\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-7\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"force-type\\\">Force type</h3>\\r\\n                    <p>If the images you are linking to have no extension, the lightbox cannot detect that is an image; therefore you need to tell the lightbox what <code>data-type</code> it is.</p>\\r\\n                    <p>Current allowed types are: <code>['image', 'youtube', 'vimeo', 'instagram', 'video', 'url']</code></p>\\r\\n                    <div data-code=\\\"example-8\\\">\\r\\n                        <p><a href=\\\"https://unsplash.it/1200/768?image=260\\\" data-title=\\\"Force image display\\\" data-footer=\\\"The remote of this modal has no extension (https://unsplash.it/1200/768?image=260) but works because the type is forced.\\\" data-toggle=\\\"lightbox\\\" data-type=\\\"image\\\">Click here for an image, but with no extension.</a></p>\\r\\n                        <p><a href=\\\"https://unsplash.it/1200/768?image=261\\\" data-footer=\\\"Without the type forced, the lightbox will remote load the content\\\" data-toggle=\\\"lightbox\\\">This link is missing the type attribute, and will iframe the image.</a></p>\\r\\n                        <p><a href=\\\"http://www.youtube.com/watch?v=b0jqPvpn3sY\\\" data-toggle=\\\"lightbox\\\" data-type=\\\"image\\\">This link is linking to a YouTube video, but forcing an image.</a></p>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-8\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"hidden-elements\\\">Hidden elements</h3>\\r\\n                    <p>Facebook style, only show a few images but have a large gallery</p>\\r\\n                    <div class=\\\"row justify-content-center\\\" data-code=\\\"example-9\\\">\\r\\n                        <a href=\\\"https://unsplash.it/1200/768.jpg?image=263\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" class=\\\"col-4\\\">\\r\\n                            <img src=\\\"https://unsplash.it/600.jpg?image=263\\\" class=\\\"img-fluid\\\">\\r\\n                        </a>\\r\\n                        <a href=\\\"https://unsplash.it/1200/768.jpg?image=264\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" class=\\\"col-4\\\">\\r\\n                            <img src=\\\"https://unsplash.it/600.jpg?image=264\\\" class=\\\"img-fluid\\\">\\r\\n                        </a>\\r\\n                        <a href=\\\"https://unsplash.it/1200/768.jpg?image=265\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" class=\\\"col-4\\\">\\r\\n                            <img src=\\\"https://unsplash.it/600.jpg?image=265\\\" class=\\\"img-fluid\\\">\\r\\n                        </a>\\r\\n                        <!-- elements not showing, use data-remote -->\\r\\n                        <div data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" data-remote=\\\"https://unsplash.it/1200/768.jpg?image=264\\\" data-title=\\\"Hidden item 1\\\"></div>\\r\\n                        <div data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" data-remote=\\\"https://www.youtube.com/embed/b0jqPvpn3sY\\\" data-title=\\\"Hidden item 2\\\"></div>\\r\\n                        <div data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" data-remote=\\\"https://unsplash.it/1200/768.jpg?image=265\\\" data-title=\\\"Hidden item 3\\\"></div>\\r\\n                        <div data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" data-remote=\\\"https://unsplash.it/1200/768.jpg?image=266\\\" data-title=\\\"Hidden item 4\\\"></div>\\r\\n                        <div data-toggle=\\\"lightbox\\\" data-gallery=\\\"hidden-images\\\" data-remote=\\\"https://unsplash.it/1200/768.jpg?image=267\\\" data-title=\\\"Hidden item 5\\\"></div>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-9\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"remote-content\\\">Remote content</h3>\\r\\n\\t\\t\\t\\t\\t<p>Given a URL, that is not an image or video (including unforced types), load the content using an iFrame.</p>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\" data-code=\\\"example-10\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <p class=\\\"col-sm-3\\\"><a href=\\\"http://getbootstrap.com\\\" data-title=\\\"Bootstrap\\\" data-width=\\\"1200\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"remoteload\\\">Bootstrap Docs</a></p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code data-code=\\\"example-10\\\"></code>\\r\\n\\r\\n                    <h3 id=\\\"no-wrapping\\\">Disable wrapping</h3>\\r\\n                    <p>To disable wrapping, set <code>wrapping: false</code> in the options to disable wrapping.</p>\\r\\n                    <div>\\r\\n                        <div class=\\\"row justify-content-center\\\">\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=251\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-11\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=251\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=252\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-11\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=252\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=253\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-11\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=253\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=254\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-11\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=254\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=255\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-11\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=255\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=256\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-11\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=256\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code>$(this).ekkoLightbox({ wrapping: false });</code>\\r\\n\\r\\n                    <h3 id=\\\"disable-fade\\\">Disable fade</h3>\\r\\n\\t\\t\\t\\t\\t<p>Set <code>fade: false</code> in the options to disable the fade.</p>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <a href=\\\"https://unsplash.it/1200/768.jpg?image=251\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-12\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"https://unsplash.it/600.jpg?image=251\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"https://unsplash.it/1200/768.jpg?image=252\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-12\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"https://unsplash.it/600.jpg?image=252\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"https://unsplash.it/1200/768.jpg?image=253\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-12\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"https://unsplash.it/600.jpg?image=253\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code>$(this).ekkoLightbox({ fade: false });</code>\\r\\n\\r\\n                    <h3 id=\\\"center-vertically\\\">Center vertically</h3>\\r\\n\\t\\t\\t\\t\\t<p>Set <code>verticalAlignCenter: true</code> in the options to vertically center the modal.</p>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            <div class=\\\"row flex-items-xs-center\\\" data-code=\\\"example-5\\\">\\r\\n                                <a href=\\\"http://www.youtube.com/watch?v=k6mFF3VmVAs\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-13\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://i1.ytimg.com/vi/yP11r5n5RNg/mqdefault.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"https://unsplash.it/1200/768.jpg?image=257\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-13\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"https://unsplash.it/600.jpg?image=257\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                                <a href=\\\"http://vimeo.com/80629469\\\" data-remote=\\\"http://player.vimeo.com/video/80629469\\\" data-toggle=\\\"lightbox\\\" data-gallery=\\\"example-gallery-13\\\" class=\\\"col-sm-4\\\">\\r\\n                                    <img src=\\\"http://b.vimeocdn.com/ts/458/070/458070637_200.jpg\\\" class=\\\"img-fluid\\\">\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code>$(this).ekkoLightbox({ verticalAlignCenter: true });</code>\\r\\n\\r\\n                    <h3 id=\\\"alt-attr\\\">Image \\\"alt\\\" attribute</h3>\\r\\n                    <p>Add <code>data-alt</code> to provide the enlarged image an alt tag.</p>\\r\\n                    <div data-code=\\\"example-2\\\">\\r\\n                        <div class=\\\"row justify-content-center\\\">\\r\\n                            <div class=\\\"col-md-8\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=251\\\" data-toggle=\\\"lightbox\\\" data-alt=\\\"Image 1 Large Alt\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=251\\\" alt=\\\"Image 1 Thumbnail\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=252\\\" data-toggle=\\\"lightbox\\\" data-alt=\\\"Image 2 Large Alt\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=252\\\" alt=\\\"Image 2 Thumbnail\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                    <a href=\\\"https://unsplash.it/1200/768.jpg?image=253\\\" data-toggle=\\\"lightbox\\\" data-alt=\\\"Image 3 Large Alt\\\" data-gallery=\\\"example-gallery\\\" class=\\\"col-sm-4\\\">\\r\\n                                        <img src=\\\"https://unsplash.it/600.jpg?image=253\\\" alt=\\\"Image 3 Thumbnail\\\" class=\\\"img-fluid\\\">\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <code class=\\\"html\\\" data-code=\\\"example-14\\\"></code>\\r\\n\\r\\n                    <p class=\\\"footer\\\"><span>Built by me, <a href=\\\"https://ashleyd.ws\\\">ashleydw</a></span></p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <script src=\\\"https://code.jquery.com/jquery-3.2.1.slim.min.js\\\" integrity=\\\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n        <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\\\" integrity=\\\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n        <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\\\" integrity=\\\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\\\" crossorigin=\\\"anonymous\\\"></script>\\r\\n        <script src=\\\"main.js\\\"></script>\\r\\n\\r\\n        <!-- for documentation only -->\\r\\n        <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/anchor-js/3.2.1/anchor.min.js\\\"></script>\\r\\n        <script type=\\\"text/javascript\\\">\\r\\n            $(document).ready(function ($) {\\r\\n                // delegate calls to data-toggle=\\\"lightbox\\\"\\r\\n                $(document).on('click', '[data-toggle=\\\"lightbox\\\"]:not([data-gallery=\\\"navigateTo\\\"]):not([data-gallery^=\\\"example-gallery-\\\"])', function(event) {\\r\\n                    event.preventDefault();\\r\\n                    return $(this).ekkoLightbox({\\r\\n                        onShown: function() {\\r\\n                            if (window.console) {\\r\\n                                return console.log('Checking our the events huh?');\\r\\n                            }\\r\\n                        },\\r\\n\\t\\t\\t\\t\\t\\tonNavigate: function(direction, itemIndex) {\\r\\n                            if (window.console) {\\r\\n                                return console.log('Navigating '+direction+'. Current item: '+itemIndex);\\r\\n                            }\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n                    });\\r\\n                });\\r\\n\\r\\n                // disable wrapping\\r\\n                $(document).on('click', '[data-toggle=\\\"lightbox\\\"][data-gallery=\\\"example-gallery-11\\\"]', function(event) {\\r\\n                    event.preventDefault();\\r\\n                    return $(this).ekkoLightbox({\\r\\n                        wrapping: false\\r\\n                    });\\r\\n                });\\r\\n\\r\\n                // disable fade\\r\\n                $(document).on('click', '[data-toggle=\\\"lightbox\\\"][data-gallery=\\\"example-gallery-12\\\"]', function(event) {\\r\\n                    event.preventDefault();\\r\\n                    return $(this).ekkoLightbox({\\r\\n                        fade: false\\r\\n                    });\\r\\n                });\\r\\n\\r\\n                // center vertically\\r\\n                $(document).on('click', '[data-toggle=\\\"lightbox\\\"][data-gallery=\\\"example-gallery-13\\\"]', function(event) {\\r\\n                    event.preventDefault();\\r\\n                    return $(this).ekkoLightbox({\\r\\n                        verticalAlignCenter: true\\r\\n                    });\\r\\n                });\\r\\n\\r\\n                //Programmatically call\\r\\n                $('#open-image').click(function (e) {\\r\\n                    e.preventDefault();\\r\\n                    $(this).ekkoLightbox();\\r\\n                });\\r\\n                $('#open-youtube').click(function (e) {\\r\\n                    e.preventDefault();\\r\\n                    $(this).ekkoLightbox();\\r\\n                });\\r\\n\\r\\n\\t\\t\\t\\t// navigateTo\\r\\n                $(document).on('click', '[data-toggle=\\\"lightbox\\\"][data-gallery=\\\"navigateTo\\\"]', function(event) {\\r\\n                    event.preventDefault();\\r\\n\\r\\n                    return $(this).ekkoLightbox({\\r\\n                        onShown: function() {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tthis.modal().on('click', '.modal-footer a', function(e) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\te.preventDefault();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.navigateTo(2);\\r\\n\\r\\n                            }.bind(this));\\r\\n\\r\\n                        }\\r\\n                    });\\r\\n                });\\r\\n\\r\\n\\r\\n                /**\\r\\n                 * Documentation specific - ignore this\\r\\n                 */\\r\\n                anchors.options.placement = 'left';\\r\\n                anchors.add('h3');\\r\\n                $('code[data-code]').each(function() {\\r\\n\\r\\n                    var $code = $(this),\\r\\n                        $pair = $('div[data-code=\\\"'+$code.data('code')+'\\\"]');\\r\\n\\r\\n                    $code.hide();\\r\\n                    var text = $code.text($pair.html()).html().trim().split(\\\"\\\\n\\\");\\r\\n                    var indentLength = text[text.length - 1].match(/^\\\\s+/)\\r\\n                    indentLength = indentLength ? indentLength[0].length : 24;\\r\\n                    var indent = '';\\r\\n                    for(var i = 0; i < indentLength; i++)\\r\\n                        indent += ' ';\\r\\n                    if($code.data('trim') == 'all') {\\r\\n                        for (var i = 0; i < text.length; i++)\\r\\n                            text[i] = text[i].trim();\\r\\n                    } else  {\\r\\n                        for (var i = 0; i < text.length; i++)\\r\\n                            text[i] = text[i].replace(indent, '    ').replace('    ', '');\\r\\n                    }\\r\\n                    text = text.join(\\\"\\\\n\\\");\\r\\n                    $code.html(text).show();\\r\\n\\r\\n                });\\r\\n            });\\r\\n        </script>\\r\\n    </body>\\r\\n</html>\\r\\n\""],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA3BA;AAAA;AAAA;AACA;AACA;AAwDA;;;;;;;;;;;;;;;;;;;;;;;AA1DA;AAuFA;AACA;AAxFA;AACA;AAyFA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AA3NA;AAAA;AAAA;AA6NA;AACA;AA9NA;AAAA;AAAA;AAiOA;AACA;AAlOA;AAAA;AAAA;AACA;AAqOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA/OA;AAAA;AAAA;AACA;AAkPA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AApQA;AAAA;AAAA;AACA;AAuQA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAzRA;AAAA;AAAA;AA4RA;AACA;AACA;AACA;AAIA;AAIA;AACA;AAxSA;AAAA;AAAA;AA2SA;AACA;AACA;AACA;AACA;AA/SA;AAAA;AAAA;AAgTA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAxTA;AAAA;AAAA;AACA;AAyTA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AA5UA;AAAA;AAAA;AA+UA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAtVA;AAAA;AAAA;AAyVA;AACA;AA1VA;AAAA;AAAA;AA6VA;AACA;AA9VA;AAAA;AAAA;AACA;AAiWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/WA;AAAA;AAAA;AACA;AAkXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAvBA;AACA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhbA;AAAA;AAAA;AAmbA;AACA;AACA;AArbA;AAAA;AAAA;AAwbA;AACA;AAEA;AACA;AACA;AA7bA;AAAA;AAAA;AAgcA;AACA;AACA;AAlcA;AAAA;AAAA;AAqcA;AACA;AACA;AACA;AACA;AACA;AA1cA;AAAA;AAAA;AA2cA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAvdA;AAAA;AAAA;AA0dA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAteA;AAAA;AAAA;AAyeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAngBA;AAAA;AAAA;AAsgBA;AACA;AACA;AACA;AAzgBA;AAAA;AAAA;AA4gBA;AACA;AACA;AACA;AACA;AAMA;AAthBA;AAAA;AAAA;AAyhBA;AACA;AACA;AACA;AA5hBA;AAAA;AAAA;AA+hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1iBA;AAAA;AAAA;AA4iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5jBA;AAAA;AAAA;AA8jBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzlBA;AAAA;AAAA;AA2lBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAznBA;AAAA;AAAA;AA4nBA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAvoBA;AAAA;AAAA;AA0oBA;AACA;AACA;AACA;AACA;AA9oBA;AAAA;AAAA;AACA;AAipBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AA/pBA;AAAA;AAAA;AAiqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzxBA;AAAA;AAAA;AA4xBA;AACA;AACA;AACA;AACA;AACA;AACA;AAlyBA;AAAA;AAAA;AACA;AAqyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA33BA;AAAA;AAAA;AA63BA;AACA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AA14BA;AACA;AADA;AAAA;AACA;AA84BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;AC15BA;AACA,gCAKA;AACA;;;;;;;;;;;ACPA;;;;;;;;;;;;;;;;;;A","sourceRoot":""}